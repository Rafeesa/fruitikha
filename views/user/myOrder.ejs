<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>My Orders</title>
    <link href="https://fonts.googleapis.com/css?family=Poppins:400,700&display=swap" rel="stylesheet">
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha3/dist/css/bootstrap.min.css" rel="stylesheet">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.4/css/all.min.css">
    <link href="https://fonts.googleapis.com/icon?family=Material+Icons" rel="stylesheet">
    <link rel="stylesheet" href="/assets/css/main.css">

    

    <style>
        body {
            margin: 0;
            font-family: 'Poppins', sans-serif;
            min-height: 100vh;
            font-size: 0.9rem; /* Slightly smaller font size */
            background-color: #f5f5f5;
        }

        /*footer {
            background-color: #343a40;
            color: white;
            text-align: center;
            padding: 10px;
            position :fixed;
            bottom: 0;
            left: 0;
            width: 100%;
        }
*/
        .custom-navbar {
            background-color: #051922;
            padding: 10px 15px;
        }
        
        .navbar .navbar-nav .nav-link {
            color: white;
        }
        .account-menu {
            color: white;
            position: relative;
        }
        .account-menu .dropdown-menu {
    background-color: #051922;
    border: none;
    min-width: 150px;
}

.account-menu .dropdown-item {
    color: white !important; /* Ensures white text */
    font-size: 0.85rem;
    transition: background-color 0.3s ease;
}

.account-menu .dropdown-item:hover {
    background-color: #ff6600;
}

        h1 {
            font-family: 'Poppins', sans-serif;
            font-size: 28px;
            color: #ff6600;
            margin-bottom: 15px;
            font-weight: 600;
        }

        .wishlist-table th, .wishlist-table td {
            padding: 10px 8px;
            font-size: 0.85rem;
        }

        .wishlist-table img {
            width: 60px;
            height: auto;
            border-radius: 6px;
        }

        .wishlist-container {
            margin-top: 20px;
            padding: 20px;
            background-color: white;
            border-radius: 8px;
            box-shadow: 0 0 15px rgba(0, 0, 0, 0.1);
        }

        .table-hover thead th {
            background-color: #051922;
            color: white;
        }

        .btn-danger {
            font-size: 0.75rem;
            padding: 6px 10px;
        }

        .address-card {
            border: 1px solid #ddd;
            padding: 10px;
            border-radius: 6px;
            margin-bottom: 10px;
            cursor: pointer;
            background-color: #f8f8f8;
        }

        
        
       
        .fasfa-map-marker-alt{
            color: #ff6600; /* Color for the location symbol */
    margin-right: 4px;
        }
        .address-section {
    font-size: 1rem; /* Font size for address */
    margin-top: 10px; /* Space above */
    color: #333; /* Text color */
}

.content-title {
    font-family:Georgia, 'Times New Roman', Times, serif;
    margin-top: 15px; /* Space above the title */
    color: #ff6600; /* Title color */
}

        

    </style>
</head>
<body>
<!-- Navbar -->
<nav class="navbar navbar-expand-lg custom-navbar shadow-sm">
    <div class="container">
        <a class="navbar-brand" href="/">
            <img src="/assets/img/logo.png" alt="Fruitikha" width="100">
        </a>
        <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarNav" aria-controls="navbarNav" aria-expanded="false" aria-label="Toggle navigation">
            <span class="navbar-toggler-icon"></span>
        </button>

        <div class="collapse navbar-collapse justify-content-center" id="navbarNav">
            <ul class="navbar-nav text-center">
                <li class="nav-item">
                    <a class="nav-link" href="/">Home</a>
                </li>
                <li class="nav-item">
                    <a class="nav-link" href="/shop">Shop</a>
                </li>
                <li class="nav-item">
                    <a class="nav-link" href="/profile">Profile</a>
                </li>
                <li class="nav-item">
                    <a class="nav-link" href="/cart">Cart</a>
                </li>
            </ul>
        </div>

        <div class="account-menu dropdown">
            <a class="nav-link dropdown-toggle" href="#" role="button" data-bs-toggle="dropdown" aria-expanded="false">
                <i class="fas fa-user"></i> Account
            </a>
            <ul class="dropdown-menu">
                <% if (user) { %>
                    <li><a class="dropdown-item" href="/logout">Logout</a></li>
                <% } else { %>
                    <li><a class="dropdown-item" href="/login">Login</a></li>
                    <li><a class="dropdown-item" href="/signup">Sign Up</a></li>
                <% } %>
            </ul>
        </div>
    </div>
</nav>

<!-- Orders Section -->
<div class="container wishlist-container mt-5">
    <header class="bg-light text-center py-3">
        <h1 class="m-0">My Orders</h1>
    </header>
   
        <!--<div class="row mt-3">
            <% if (orders && orders.length > 0) { %> 
                <div class="col-md-6">
                    <span>
                        <i class="material-icons md-calendar_today"></i> 
                        <b><%= new Date(orders[0].createdAt).toLocaleDateString() %></b> 
                    </span>
                    <br>
                    <div>
                        <h3 class="content-title card-title">Order Details of</h3>
                        <p><strong>Name:</strong> <%= user.name %></p> 
                        <p><strong>Phone Number:</strong> <%= user.phone %></p> 
                    </div>
                </div>
    
                <div class="col-md-6"> 
                    <div class="address-section text-center mt-3">
                        <i class="fas fa-map-marker-alt"> <h2 class="content-title card-title">Addresses</h2></i>
                        <% addresses.forEach(addr => { %>
                            <div class="address-card p-3 mb-3" onclick="selectAddress('<%= addr._id %>')">
                                <p><strong>Name:</strong> <%= addr.name %></p>
                                <p><strong>House Name:</strong> <%= addr.houseName %></p>
                                <p><strong>City:</strong> <%= addr.city %></p>
                                <p><strong>State:</strong> <%= addr.state %></p>
                                <p><strong>Pincode:</strong> <%= addr.pincode %></p>
                            </div>
                        <% }) %>
                    </div>
                </div>
            <% } else { %> 
                <div class="col-12">
                    <p>No orders found.</p>
                </div>
            <% } %>
        </div>
    </div>
    
-->
   

</div>
</div>
   
        <table class="table wishlist-table table-striped text-center mt-4">
            <thead class="table-hover">
                <tr>
                    <th>Image</th>
                    <th>Name</th>
                    <th>Order ID</th>
                    <th>Date</th>
                    <th>Status</th>
                    <th>Total</th>
                    <th>Payment Method</th>
                    <th>Payment Status</th> <!-- New Column -->
                    <th>Action</th>
                    <th></th>
                </tr>
            </thead>
            <tbody>
                <% if (orders && orders.length > 0) { %>
                    <% orders.forEach(order => { %> <!-- Loop through each order -->
                        <% order.items.forEach(item => { %> <!-- Loop through each item in the order -->
                            <tr>
                                <% if (item.productId && item.productId.productImage && item.productId.productImage.length > 0) { %>
                                    <td><img src="/uploads/product-images/<%= item.productId.productImage[0] %>" alt="Product Image"></td>
                                <% } else { %>
                                    <td><img src="/path/to/placeholder-image.jpg" alt="No Image Available"></td> <!-- Fallback image -->
                                <% } %>
        
                                <td><%= item.productId.name %></td>
                                <td><%= order.orderID %></td>
                                <td><%= new Date(order.createdAt).toLocaleDateString() %></td>
                                <td><%= order.status %></td>
                                <td>â‚¹<%= order.totalCost.toFixed(2) %></td>
                                <td><%= order.paymentMethod %></td>
                                <td><%= order.paymentStatus %></td>

        
                                <!-- New Payment Status Column 
                                <td>
                                    <% if (order.paymentMethod === 'Razorpay' && order.paymentStatus === 'failure') { %>
                                        Payment Pending
                                    <% } else if (order.paymentMethod === 'Online Payment' || order.paymentStatus === 'success') { %>
                                        Success
                                    <% } else if (order.paymentMethod === 'cashOnDelivery') { %>
                                        Success
                                    <% } else { %>
                                        Unknown
                                    <% } %>
                                </td>-->
        
                                <td>
                                    <% if (order.status === 'order placed') { %>
                                      <form 
                                        action="/order/cancel/<%= order._id %>" 
                                        method="POST" 
                                        style="display:inline;" 
                                        onsubmit="return confirmCancel(event);"
                                      >
                                        <button type="submit" class="btn btn-danger">Cancel</button>
                                      </form>
                                    <% } else if (order.status === 'Delivered') { %>
                                      <form 
                                        id="returnForm-<%= order._id %>" 
                                        style="display:inline;" 
                                        onsubmit="return handleReturnRequest(event, '<%= order._id %>');"
                                      >
                                        <button type="submit" class="btn btn-warning">Return</button>
                                      </form>
                                    <% } else { %>
                                      <span>N/A</span>
                                    <% } %>
                                  </td>
                                <td>
                                    <% if (order.paymentStatus === 'payment pending') { %>
                                        <button 
                                            class="btn btn-success" 
                                           onclick="handleRepay('<%= order.orderID %>','<%= order.totalCost.toFixed(2) %>')">Repay

                                        
                                            
                                        </button>
                                    <% } else if  (order.status === 'Delivered' || order.status === 'return') { %>
                                    <!-- Invoice Button -->
                                  
                                        <form action="/order/invoice/<%= order._id %>" method="GET" style="display:inline;">
                                            <button type="submit" class="btn btn-primary">Download Invoice</button>
                                        </form>
                                    <% } %>
                                </td>
                            </tr>
                        <% }) %> <!-- Closing item loop -->
                    <% }) %> <!-- Closing order loop -->
                <% } else { %>
                    <tr>
                        <td colspan="10" class="text-center">No orders found.</td>
                    </tr>
                <% } %>
            </tbody>
        </table>
        
            
        

</div>
<!-- Pagination -->
<div class="container mt-3">
    <nav aria-label="Page navigation">
        <ul class="pagination justify-content-center mb-20" style="margin-right:200px;">
            <% for (let i = 1; i <= totalPages; i++) { %>
                <li class="page-item <%= (i === currentPage) ? 'active' : '' %>">
                    <a class="page-link" href="?page=<%= i %>" style="background-color: #075173; color: white;align-items: center;"><%= i %></a>
                </li>
            <% } %>
        </ul>
    </nav>
</div>
    <br><br>
<!-- Footer -->

<script src="https://cdn.jsdelivr.net/npm/@popperjs/core@2.9.2/dist/umd/popper.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha3/dist/js/bootstrap.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
<script src="https://checkout.razorpay.com/v1/checkout.js"></script>


<script>
  async function handleReturnRequest(event, orderId) {
    event.preventDefault(); // Prevent default form submission

    try {
      const response = await fetch(`/order/return/${orderId}`, {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
        },
      });

      const result = await response.json();
      console.log(result)

      if (response.ok && result.success) {
        // Display success message using SweetAlert
        Swal.fire({
          title: 'Success!',
          text: result.message,
          icon: 'success',
          confirmButtonText: 'OK',
        });
      } else {
        // Display error message using SweetAlert
        Swal.fire({
          title: 'Error!',
          text: result.message || 'An error occurred while processing your request.',
          icon: 'error',
          confirmButtonText: 'OK',
        });
      }
    } catch (error) {
      console.error('Error handling return request:', error);

      // Handle network or unexpected errors
      Swal.fire({
        title: 'Error!',
        text: 'Something went wrong. Please try again later.',
        icon: 'error',
        confirmButtonText: 'OK',
      });
    }
  }
</script>

<script>
    function confirmCancel(event) {
        event.preventDefault(); // Prevent the form from submitting immediately

        Swal.fire({
            title: 'Are you sure you want to cancel this order?',
            icon: 'warning',
            showCancelButton: true,
            confirmButtonText: 'Yes, cancel it!',
            cancelButtonText: 'No, keep it',
            reverseButtons: true
        }).then((result) => {
    if (result.isConfirmed) {
        Swal.fire('Successfully Cancelled', '', 'success').then(() => {
            event.target.submit(); // Submit the form after the alert is dismissed
        });
            } else {
                Swal.fire('Cancelled', 'Your order was not cancelled.', 'info'); // Show a cancellation message
            }
        });
    }

    function confirmReturn(event) {
        event.preventDefault(); // Prevent the form from submitting immediately

        Swal.fire({
            title: 'Are you sure you want to request a return?',
            icon: 'warning',
            showCancelButton: true,
            confirmButtonText: 'Yes, request return!',
            cancelButtonText: 'No, keep it',
            reverseButtons: true
        }).then((result) => {
            if (result.isConfirmed) {
                event.target.submit(); // Submit the form if confirmed
            } else {
                Swal.fire('Cancelled', 'Your return request was not submitted.', 'info'); // Show a cancellation message
            }
        });
    }

   
async function handleRepay(orderID, amount) {
  try {
    console.log("Handling repayment for order:", orderID);
    console.log("Handling repayment for orderamount:", amount);

    // Fetch repayment details from the backend
    const response = await fetch('/create-razorpay-reorder', {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
      },
      body: JSON.stringify({
        orderID,
        amount,
      }),
    });

    const data = await response.json();
    console.log('Repayment Response:', data);

    if (data.success) {
      const { paymentDetails, key_id } = data;
      const razorpayOrderID = paymentDetails.id; // Razorpay order ID
      const amount = paymentDetails.amount; // Amount in paise

      console.log('Razorpay Order ID:', razorpayOrderID);

      const options = {
        key: key_id,
        amount: amount,
        currency: 'INR',
        name: 'Fruitikha',
        description: 'Repayment for Order',
        order_id: razorpayOrderID, // Existing Razorpay order ID
        handler: async function (response) {
          try {
            // Verify repayment on the backend
            const verificationResponse = await fetch('/verify-repayment', {
              method: 'POST',
              headers: {
                'Content-Type': 'application/json',
              },
              body: JSON.stringify({
                paymentId: response.razorpay_payment_id,
                orderId: razorpayOrderID,
                signature: response.razorpay_signature,
                orderID: orderID,
              }),
            });

            const verificationData = await verificationResponse.json();
            if (verificationData.success) {
                Swal.fire({
  title: 'Success!',
  text: 'Repayment successful and verified!',
  icon: 'success',
  confirmButtonText: 'View My Orders',
}).then((result) => {
  if (result.isConfirmed) {
    // Redirect to /myOrder
    window.location.href = '/myOrder';
  }
});
}else {
              Swal.fire({
                title: 'Error!',
                text: 'Repayment verification failed.',
                icon: 'error',
                confirmButtonText: 'Retry',
              });
            }
          } catch (error) {
            console.error('Error in repayment handler:', error);
            Swal.fire({
              title: 'Error!',
              text: 'An error occurred during repayment. Please try again.',
              icon: 'error',
              confirmButtonText: 'Retry',
            });
          }
        },
        prefill: {
          name: data.userName,
          email: data.userEmail,
          contact: data.userPhone,
        },
        theme: {
          color: '#3399cc',
        },
      };

      const rzp = new Razorpay(options);
      rzp.open();
    } else {
      Swal.fire({
        title: 'Error!',
        text: 'Failed to fetch repayment details. Please try again.',
        icon: 'error',
        confirmButtonText: 'Retry',
      });
    }
  } catch (error) {
    console.error('Error initiating repayment:', error);
    Swal.fire({
      title: 'Error!',
      text: 'An error occurred while processing your repayment. Please try again.',
      icon: 'error',
      confirmButtonText: 'Retry',
    });
  }
}




async function verifyPayment(response) {
    try {
        const paymentResponse = await fetch('/verify-repayment', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
            },
            body: JSON.stringify({
                paymentId: response.razorpay_payment_id,
                orderId: response.razorpay_order_id,
                signature: response.razorpay_signature,
              
            })
        });

        const paymentData = await paymentResponse.json(); // Avoid redeclaring paymentData
        if (paymentData.success) {
            alert('Payment successful!');
            window.location.href = '/orderSuccess';
        } else {
            alert('Payment failed. Please try again.');
        }
    } catch (error) {
        console.error('Error completing Razorpay payment:', error);
        alert('An error occurred while completing your payment. Please try again.');
    }
}








</script>

<%- include("../../views/partials/user/footer") %>
