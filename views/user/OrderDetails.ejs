<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>My Orders</title>
    <link href="https://fonts.googleapis.com/css?family=Poppins:400,700&display=swap" rel="stylesheet">
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha3/dist/css/bootstrap.min.css" rel="stylesheet">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.4/css/all.min.css">
    <link href="https://fonts.googleapis.com/icon?family=Material+Icons" rel="stylesheet">
    <link rel="stylesheet" href="/assets/css/main.css">

    

    <style>
        body {
            margin: 0;
            font-family: 'Poppins', sans-serif;
            min-height: 100vh;
            font-size: 0.9rem; /* Slightly smaller font size */
            background-color: #f5f5f5;
        }

        /*footer {
            background-color: #343a40;
            color: white;
            text-align: center;
            padding: 10px;
            position :fixed;
            bottom: 0;
            left: 0;
            width: 100%;
        }
*/
        .custom-navbar {
            background-color: #051922;
            padding: 10px 15px;
        }
        
        .navbar .navbar-nav .nav-link {
            color: white;
        }
        .account-menu {
            color: white;
            position: relative;
        }
        .account-menu .dropdown-menu {
    background-color: #051922;
    border: none;
    min-width: 150px;
}

.account-menu .dropdown-item {
    color: white !important; /* Ensures white text */
    font-size: 0.85rem;
    transition: background-color 0.3s ease;
}

.account-menu .dropdown-item:hover {
    background-color: #ff6600;
}

        h1 {
            font-family: 'Poppins', sans-serif;
            font-size: 28px;
            color: #ff6600;
            margin-bottom: 15px;
            font-weight: 600;
        }

        .wishlist-table th, .wishlist-table td {
            padding: 10px 8px;
            font-size: 0.85rem;
        }

        .wishlist-table img {
            width: 60px;
            height: auto;
            border-radius: 6px;
        }

        .wishlist-container {
            margin-top: 20px;
            padding: 20px;
            background-color: white;
            border-radius: 8px;
            box-shadow: 0 0 15px rgba(0, 0, 0, 0.1);
        }

        .table-hover thead th {
            background-color: #051922;
            color: white;
        }

        .btn-danger {
            font-size: 0.75rem;
            padding: 6px 10px;
        }

        .address-card {
            border: 1px solid #ddd;
            padding: 10px;
            border-radius: 6px;
            margin-bottom: 10px;
            cursor: pointer;
            background-color: #f8f8f8;
        }

        
        
       
        .fasfa-map-marker-alt{
            color: #ff6600; /* Color for the location symbol */
    margin-right: 4px;
        }
        .address-section {
    font-size: 1rem; /* Font size for address */
    margin-top: 10px; /* Space above */
    color: #333; /* Text color */
}

.content-title {
    font-family:Georgia, 'Times New Roman', Times, serif;
    margin-top: 15px; /* Space above the title */
    color: #ff6600; /* Title color */
}

        

    </style>
</head>
<body>
<!-- Navbar -->
<nav class="navbar navbar-expand-lg custom-navbar shadow-sm">
    <div class="container">
        <a class="navbar-brand" href="/">
            <img src="/assets/img/logo.png" alt="Fruitikha" width="100">
        </a>
        <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarNav" aria-controls="navbarNav" aria-expanded="false" aria-label="Toggle navigation">
            <span class="navbar-toggler-icon"></span>
        </button>

        <div class="collapse navbar-collapse justify-content-center" id="navbarNav">
            <ul class="navbar-nav text-center">
                <li class="nav-item">
                    <a class="nav-link" href="/">Home</a>
                </li>
                <li class="nav-item">
                    <a class="nav-link" href="/shop">Shop</a>
                </li>
                <li class="nav-item">
                    <a class="nav-link" href="/profile">Profile</a>
                </li>
                <li class="nav-item">
                    <a class="nav-link" href="/cart">Cart</a>
                </li>
            </ul>
        </div>

        <div class="account-menu dropdown">
            <a class="nav-link dropdown-toggle" href="#" role="button" data-bs-toggle="dropdown" aria-expanded="false">
                <i class="fas fa-user"></i> Account
            </a>
            <ul class="dropdown-menu">
                <% if (user) { %>
                    <li><a class="dropdown-item" href="/logout">Logout</a></li>
                <% } else { %>
                    <li><a class="dropdown-item" href="/login">Login</a></li>
                    <li><a class="dropdown-item" href="/signup">Sign Up</a></li>
                <% } %>
            </ul>
        </div>
    </div>
</nav>

<!-- Orders Section -->
<div class="container wishlist-container mt-5">
    <header class="bg-light text-center py-3">
      <h1 class="m-0">Order #<%= order.orderID %></h1>
    </header>
   
         <!-- Order Summary Section -->
  <div class="row mt-3">
    <div class="col-md-6">
      <span>
        <i class="material-icons md-calendar_today"></i>
        <b><%= new Date(order.createdAt).toLocaleDateString() %></b>
      </span>
      <div>
        <h3 class="content-title">Order Details</h3>
        <p><strong>Name:</strong> <%= user.name %></p>
        <p><strong>Phone:</strong> <%= user.phone %></p>
      </div>
    </div>

    <!-- Payment Info Section -->
    <div class="col-md-3">
      <article class="icontext align-items-start">
        <div class="text">
          <h6 class="mb-1">Payment Info</h6>
          <p class="mb-1">
            Method: <%= order.paymentMethod %><br>
            Status: <span class="<%= order.paymentStatus === 'Success' ? 'text-success' : 'text-danger' %>">
              <%= order.paymentStatus %>
            </span>
          </p>
          <!-- Order-level actions -->
          <div class="mt-3">
            <% if (order.paymentStatus === 'payment pending') { %>
              <button 
                class="btn btn-success btn-sm" 
                onclick="handleRepay('<%= order.orderID %>','<%= order.totalCost.toFixed(2) %>')"
              >
                Repay
              </button>
            <% } %>
            <% order.items.forEach(item => { %>
            <% if (item.status === 'Delivered') { %>
              <form action="/order/invoice/<%= order._id %>" method="GET" style="display:inline;">
                <button type="submit" class="btn btn-primary btn-sm">Download Invoice</button>
              </form>
            <% } %>
            <% }) %>
          </div>
        </div>
      </article>
    </div>
                <!-- Address Section -->
      <div class="col-md-6">
        <div class="address-section">
          <h2 class="content-title">Delivery Address</h2>
          <% if (addresses.length > 0) { %>
            <div class="address-card">
              <p><strong>Name:</strong> <%= addresses[0].name %></p>
              <p><strong>House:</strong> <%= addresses[0].houseName %></p>
              <p><strong>City:</strong> <%= addresses[0].city %></p>
              <p><strong>State:</strong> <%= addresses[0].state %></p>
              <p><strong>Pincode:</strong> <%= addresses[0].pincode %></p>
            </div>
          <% } %>
        </div>
      </div>
    </div>

    <!-- Order Items Table -->
    <table class="table wishlist-table table-striped text-center mt-4">
      <thead class="table-hover">
        <tr>
          <th>Image</th>
          <th>Product</th>
          <th>Quantity</th>
          <th>Price</th>
          <th>Total Price</th>
          <th>Status</th>
          <th>Action</th>
        </tr>
      </thead>
      <tbody>
        <% order.items.forEach(item => { %>
          <tr>
            <td>
              <img src="/uploads/product-images/<%= item.productId.productImage[0] %>" alt="Product">
            </td>
            <td><%= item.productId.name %></td>
            <td><%= item.quantity %></td>
            <td><%= item.salePrice %></td>
            <td>₹<%= (item.salePrice * item.quantity).toFixed(2) %></td>
            <td><%= item.status %></td>
            <td>
              <% if (item.status === 'OrderPlaced') { %>
                <form action="/order/cancel" method="POST" onsubmit="return confirmCancel(event);">
                    <input type="hidden" name="orderId" value="<%= order._id %>">
                    <input type="hidden" name="itemId" value="<%= item._id %>">
                    <button type="submit" class="btn btn-danger">Cancel</button>
                  </form>
              <% } else if (item.status === 'Delivered') { %>
                <form id="returnForm-<%= order._id %>" style="display:inline;" onsubmit="handleReturnRequest(event, '<%= order.orderID %>', '<%= item._id %>');">
                  <button type="submit" class="btn btn-warning">Return</button>
                </form>
              <% } %>
            </td>
          </tr>
        <% }) %>
      </tbody>
      <tfoot>
        <tr>
          <td colspan="3" class="text-end"><strong>Subtotal:</strong></td>
          <td colspan="3">₹<%= order.subtotal.toFixed(2) %></td>
        </tr>
        <tr>
          <td colspan="3" class="text-end"><strong>Shipping:</strong></td>
          <td colspan="3">₹<%= order.shippingCost.toFixed(2) %></td>
        </tr>
        <tr>
          <td colspan="3" class="text-end"><strong>Total:</strong></td>
          <td colspan="3">₹<%= order.totalCost.toFixed(2) %></td>
        </tr>
      </tfoot>
    </table>
  </div>
        
            
        

</div>
<!-- Pagination -->
<div class="container mt-3">
    <nav aria-label="Page navigation">
        <ul class="pagination justify-content-center mb-20" style="margin-right:200px;">
            <% for (let i = 1; i <= totalPages; i++) { %>
                <li class="page-item <%= (i === currentPage) ? 'active' : '' %>">
                    <a class="page-link" href="?page=<%= i %>" style="background-color: #075173; color: white;align-items: center;"><%= i %></a>
                </li>
            <% } %>
        </ul>
    </nav>
</div>
    <br><br>
<!-- Footer -->

<script src="https://cdn.jsdelivr.net/npm/@popperjs/core@2.9.2/dist/umd/popper.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha3/dist/js/bootstrap.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
<script src="https://checkout.razorpay.com/v1/checkout.js"></script>


<script>
 async function handleReturnRequest(event, orderID, itemId) {
  event.preventDefault(); // Prevent form submission reload

  try {
    console.log('Sending request to server:', {
      itemId,
      status: 'Return',
    });

    const response = await fetch(`/order/return/${orderID}`, {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json', // Ensure proper Content-Type
      },
      body: JSON.stringify({ itemId, status: 'Return Requested' }), // Send data
    });

    const result = await response.json(); // Parse server response
    console.log('Response received:', result);

    if (response.ok && result.success) {
      alert('Return request submitted successfully.');
      window.location.reload(); // Refresh the page
    } else {
      alert(result.message || 'An error occurred.');
    }
  } catch (error) {
    console.error('Error:', error);
    alert('Failed to process the return request.');
  }
}


</script>

<script>
    function confirmCancel(event) {
        event.preventDefault(); // Prevent the form from submitting immediately

        Swal.fire({
            title: 'Are you sure you want to cancel this order?',
            icon: 'warning',
            showCancelButton: true,
            confirmButtonText: 'Yes, cancel it!',
            cancelButtonText: 'No, keep it',
            reverseButtons: true
        }).then((result) => {
    if (result.isConfirmed) {
        Swal.fire('Successfully Cancelled', '', 'success').then(() => {
            event.target.submit(); // Submit the form after the alert is dismissed
        });
            } else {
                Swal.fire('Cancelled', 'Your order was not cancelled.', 'info'); // Show a cancellation message
            }
        });
    }

    function confirmReturn(event) {
        event.preventDefault(); // Prevent the form from submitting immediately

        Swal.fire({
            title: 'Are you sure you want to request a return?',
            icon: 'warning',
            showCancelButton: true,
            confirmButtonText: 'Yes, request return!',
            cancelButtonText: 'No, keep it',
            reverseButtons: true
        }).then((result) => {
            if (result.isConfirmed) {
                event.target.submit(); // Submit the form if confirmed
            } else {
                Swal.fire('Cancelled', 'Your return request was not submitted.', 'info'); // Show a cancellation message
            }
        });
    }

   
    async function verifyPayment(paymentId, orderId, signature, orderID) {
  const verificationResponse = await fetch('/verify-repayment', {
    method: 'POST',
    headers: {
      'Content-Type': 'application/json',
    },
    body: JSON.stringify({
      paymentId,
      orderId,
      signature,
      orderID,
    }),
  });
  return await verificationResponse.json();
}

async function handleRepay(orderID, amount) {
  try {
    console.log("Handling repayment for order:", orderID);
    console.log("Handling repayment for amount:", amount);

    const response = await fetch('/create-razorpay-reorder', {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
      },
      body: JSON.stringify({
        orderID,
        amount,
      }),
    });

    const data = await response.json();
    console.log('Repayment Response:', data);

    if (!data.success) {
      throw new Error(data.message || 'Failed to fetch repayment details');
    }

    const { paymentDetails, key_id } = data;
    const options = {
      key: key_id,
      amount: paymentDetails.amount,
      currency: 'INR',
      name: 'Fruitikha',
      description: 'Repayment for Order',
      order_id: paymentDetails.id,
      handler: async function (response) {
        try {
          const verificationData = await verifyPayment(
            response.razorpay_payment_id,
            response.razorpay_order_id,
            response.razorpay_signature,
            orderID
          );

          if (verificationData.success) {
            Swal.fire({
              title: 'Success!',
              text: 'Payment successful!',
              icon: 'success',
              confirmButtonText: 'View My Orders'
            }).then((result) => {
              if (result.isConfirmed) {
                window.location.href = '/myOrder';
              }
            });
          } else {
            throw new Error(verificationData.message || 'Payment verification failed');
          }
        } catch (error) {
          console.error('Payment verification error:', error);
          Swal.fire({
            title: 'Verification Failed',
            text: error.message || 'Payment verification failed. Please contact support.',
            icon: 'error',
            confirmButtonText: 'OK'
          });
        }
      },
      prefill: {
        name: data.userName || '',
        email: data.userEmail || '',
        contact: data.userPhone || ''
      },
      theme: {
        color: '#3399cc'
      },
      modal: {
        ondismiss: function() {
          Swal.fire({
            title: 'Payment Cancelled',
            text: 'You cancelled the payment process.',
            icon: 'info',
            confirmButtonText: 'OK'
          });
        }
      }
    };

    const rzp = new Razorpay(options);
    rzp.on('payment.failed', function (response) {
      console.error('Payment failed:', response.error);
      Swal.fire({
        title: 'Payment Failed',
        text: response.error.description || 'Payment failed. Please try again.',
        icon: 'error',
        confirmButtonText: 'OK'
      });
    });

    rzp.open();

  } catch (error) {
    console.error('Error initiating repayment:', error);
    Swal.fire({
      title: 'Error',
      text: error.message || 'Failed to initiate payment. Please try again.',
      icon: 'error',
      confirmButtonText: 'OK'
    });
  }
}
</script>

<%- include("../../views/partials/user/footer") %>
